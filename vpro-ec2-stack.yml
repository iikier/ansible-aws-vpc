---
- name: Setup Vprofile Stack 
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Import VPC setup Variable
      include_vars: vars/output_vars

    - name: Import VPC setup Variable
      include_vars: vars/vprostacksetup

    - name: Create ec2 key
      ec2_key:
        name: vprokey
        region: "us-east-1"
      register: vprokey_out

    - name: Save private key into file loginkey_vpro.pem
      copy:
        content: "{{vprokey_out.key.private_key}}"
        dest: "./loginkey_vpro.pem"
        mode: 0600
      when: vprokey_out.changed

    - name: Create Sec Grp for load balancer
      ec2_group:
        name: vproELB-sg        
        description: Allow port 80 from everywhere and all port within sg
        region: "us-east-1"
        vpc_id: "{{vpcid}}"
        rules: 
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: vproELBSG_out

    - name: Create Sec Grp for Vprofile Stack
      ec2_group:
        name: vproStack-sg        
        description: Allow port 22 from everywhere and all port within sg
        region: "us-east-1"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules: 
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproELBSG_out.group_id}}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "sg-017dc3eacbbfd0010"
      register: vproStackSG_out

    - name: Update Security Group with its own sg id
      ec2_group:
        name: vproStack-sg        
        description: Allow port 22 from everywhere and all port within sg
        region: "us-east-1"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules: 
          - proto: all
            group_id: "{{vproStackSG_out.group_id}}"

    - name: Creating Nginx web01
      community.aws.ec2_instance:
        key_name: actions
        region: "us-east-1"
        instance_type: t2.micro
        image_id: "{{ nginx_ami }}"
        exact_count: 1
        wait: yes
        wait_timeout: 300
        tags:
          Name: "web01"
          Project: Vprofile
          Owner: Devops Team
        security_groups:
          - "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: web01_out

    - name: Creating tomcat app01
      community.aws.ec2_instance:
        key_name: actions
        region: "us-east-1"
        instance_type: t2.micro
        image_id: "{{ tomcat_ami }}"
        exact_count: 1
        wait: yes
        wait_timeout: 300
        tags:
          Name: "app01"
          Project: Vprofile
          Owner: Devops Team
        security_groups:
          - "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: app01_out

    - name: Creating memcache mc01
      community.aws.ec2_instance:
        key_name: actions
        region: "us-east-1"
        instance_type: t2.micro
        image_id: "{{ memcache_ami }}"
        exact_count: 1
        wait: yes
        wait_timeout: 300
        tags:
          Name: "mc01"
          Project: Vprofile
          Owner: Devops Team
        security_groups:
          - "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: mc01_out

    - name: Creating rabbitmq rmq01
      community.aws.ec2_instance:
        key_name: actions
        region: "us-east-1"
        instance_type: t2.micro
        image_id: "{{ rmq_ami }}"
        exact_count: 1
        wait: yes
        wait_timeout: 300
        tags:
          Name: "rmq01"
          Project: Vprofile
          Owner: Devops Team
        security_groups:
          - "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: rmq01_out

    - name: Creating Mysql db01
      community.aws.ec2_instance:
        key_name: actions
        region: "us-east-1"
        instance_type: t2.micro
        image_id: "{{ mysql_ami }}"
        exact_count: 1
        wait: yes
        wait_timeout: 300
        tags:
          Name: "db01"
          Project: Vprofile
          Owner: Devops Team
        security_groups:
          - "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: db01_out
    
    - debug: 
        var: db01_out.tagged_instances[0].id

    - local_action:
        module: ec2_elb_lb
        name: "vprofile-elb"
        region: "us-east-1"
        state: present
        instance_ids:
          - "{{web01_out.tagged_instances[0].id}}"
        purge_instance_ids: true
        security_group_ids: "{{vproELBSG_out.group.id}}"
        subnets:
          - "{{ pubsub1id }}"
          - "{{ pubsub2id }}"
          - "{{ pubsub3id }}"
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
        